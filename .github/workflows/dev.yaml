name: final-capstone

on:
  push:
    branches: [master]

env:
  AWS_REGION: us-east-1
  IMAGE_TAG: master
  EKS_CLUSTER_NAME: capstone
  ECR_REGISTRY: 931003996958.dkr.ecr.eu-central-1.amazonaws.com

  DOCKERHUB_REPOSITORY_NAME : kandula17/e-commerce

jobs:
  build:
    runs-on: [self-hosted , aws]

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Source code
        id: checkout
        run: echo "test"

  #    - name: set lower case repository name
  #      id: lc-repository
  #      run: |
  #        echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
  #      env:
  #        REPOSITORY: "${{ github.repository }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your region          

      - name: Log in to ECR
        run:  aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
 
      - name: Set image tag for branch/tag
        id: set_image_tag_branch
        if: github.ref_type == 'branch' || github.ref_type == 'tag' # Or more specific conditions
        run: |
          echo "IMAGE_TAG=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
        # The output from this step will only be set if this step runs

      - name: Set image tag for other events (e.g., pull_request, push to non-branch/tag)
        id: set_image_tag_sha
        # This step runs if the previous one didn't set the tag, or for specific event types
        if: success() && !steps.set_image_tag_branch.outputs.IMAGE_TAG # Runs if the branch/tag step didn't set the tag
        run: |
          echo "IMAGE_TAG=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Use image tag
        run: |
          # Use a coalesce-like approach to get the tag, preferring the branch tag if set
          IMAGE_TAG="${{ steps.set_image_tag_branch.outputs.IMAGE_TAG || steps.set_image_tag_sha.outputs.IMAGE_TAG }}"
          echo "Using image tag: $IMAGE_TAG"

      - name: Build Docker Compose services
        run: |
          echo "Building Docker Compose services with tag: $APP_IMAGE_TAG"
          docker compose build --parallel
        env:
          APP_IMAGE_TAG: "${{ steps.set_image_tag_branch.outputs.IMAGE_TAG || steps.set_image_tag_sha.outputs.IMAGE_TAG }}"  # Pass the determined tag as an env var

      - name: Push Docker Compose service images to Docker Hub.
        run: |
          echo "Pushing Docker Compose services to Docker Hub..."
          docker compose push
        env:
          APP_IMAGE_TAG: "${{ steps.set_image_tag_branch.outputs.IMAGE_TAG || steps.set_image_tag_sha.outputs.IMAGE_TAG }}" # Ensure the same tag is used for pushing

      - name: Verify pushed images (optional)
        run: docker images

#      - name: Build Docker image
#        run: sudo docker compose  build --parallel


 
#      - name: Push Docker image
#        run: sudo docker push kandula17/e-commerce:${{ env.IMAGE_TAG }}
